const giftBox = document.getElementById("giftBox");
const popup = document.getElementById("popup");
const yesBtn = document.getElementById("yesBtn");
const noBtn = document.getElementById("noBtn");
const questionMark = document.getElementById("questionMark");
const minigame = document.getElementById("minigame");
const numberGrid = document.getElementById("numberGrid");
const resultText = document.getElementById("resultText");
const closeMinigame = document.getElementById("closeMinigame");
const minigameHeader = document.getElementById("minigameHeader");

let attempts = 0;
let phrasesYes = ["yessss", "deal", "say less", "bet", "ch·∫Øc lun", "smash that", "open up", "send it", "aye go!", "no cap", "do ittt"];
let phrasesNo = ["naur", "bruh", "nah fam", "outtt", "noooo", "miss me", "hard pass", "not today", "keep dreamin", "in ur dreamz", "nahhh"];
let targetNumber = 143;
let wrongAttempts = 0;
let gameSolved = false;
let maxX = 400;
let maxY = 400;
let yesBtnMoves = 0;
let showQuestionMark = false;
let isQuestionMarkVisible = false;
let isYesBtnMoved10Times = false; // Flag ƒë·ªÉ theo d√µi s·ªë l·∫ßn di chuy·ªÉn c·ªßa n√∫t Yes

// Click h·ªôp qu√†
giftBox.addEventListener("click", () => {
  if (!gameSolved) {
    popup.classList.remove("hidden");
    popup.classList.add("popup");

    // ƒê·∫∑t popup v√†o gi·ªØa m√†n h√¨nh
    popup.style.position = "fixed";
    popup.style.top = "50%";
    popup.style.left = "50%";
    popup.style.transform = "translate(-50%, -50%)";

    // Reset l·∫°i v·ªã tr√≠ v√† text
    if (attempts < 10) {
      yesBtn.textContent = "yessss";
      noBtn.textContent = "naur";
      yesBtn.style.position = "static";
      yesBtn.style.left = "";
      yesBtn.style.top = "";
    }

    resultText.textContent = "";
    resultText.style.fontSize = "16px";
  }
});

// Nh·∫•n n√∫t No
noBtn.addEventListener("click", () => {
  popup.classList.add("hidden");

  // Reset l·∫°i m·ªçi th·ª© khi click No
  attempts = 0;
  yesBtn.textContent = getRandomPhrase(phrasesYes);
  noBtn.textContent = getRandomPhrase(phrasesNo);
  yesBtn.style.position = "static";
  yesBtn.style.left = "";
  yesBtn.style.top = "";

  questionMark.classList.add("hidden");
  yesBtnMoves = 0;
  isYesBtnMoved10Times = false; // Reset s·ªë l·∫ßn di chuy·ªÉn

  // Hi·ªán l·∫°i yesBtn sau 10 l·∫ßn move
  let retryChecker = setInterval(() => {
    if (yesBtnMoves >= 10 && !isQuestionMarkVisible) {
      questionMark.classList.remove("hidden");
      isQuestionMarkVisible = true; // ƒê√°nh d·∫•u ƒë√£ hi·ªán d·∫•u ?
      clearInterval(retryChecker);
    }
  }, 500);
});

// N√© chu·ªôt
yesBtn.addEventListener("mouseenter", () => {
  if (gameSolved || isQuestionMarkVisible) return; // Kh√¥ng t√≠nh sau khi d·∫•u ? ƒë√£ xu·∫•t hi·ªán
  moveYesButton();
});

yesBtn.addEventListener("touchstart", () => {
  if (gameSolved || isQuestionMarkVisible) return; // Kh√¥ng t√≠nh sau khi d·∫•u ? ƒë√£ xu·∫•t hi·ªán
  moveYesButton();
});

function moveYesButton() {
  attempts++;
  yesBtnMoves++;

  // Ki·ªÉm tra khi n√∫t Yes di chuy·ªÉn ƒë·ªß 10 l·∫ßn v√† d·∫•u ? ch∆∞a xu·∫•t hi·ªán
  if (yesBtnMoves >= 10 && !isYesBtnMoved10Times) {
    isYesBtnMoved10Times = true;
    questionMark.classList.remove("hidden");
    isQuestionMarkVisible = true; // ƒê√°nh d·∫•u ƒë√£ hi·ªán d·∫•u ?
  }

  if (isQuestionMarkVisible) return; // Kh√¥ng t√≠nh sau khi d·∫•u ? ƒë√£ xu·∫•t hi·ªán

  const popupRect = popup.getBoundingClientRect();
  const btnRect = yesBtn.getBoundingClientRect();

  const popupWidth = popupRect.width;
  const popupHeight = popupRect.height;

  const btnWidth = btnRect.width;
  const btnHeight = btnRect.height;

  // Gi·ªõi h·∫°n theo thi·∫øt b·ªã
  const isMobile = window.innerWidth < 768;
  const maxMoveX = isMobile ? 100 : 400;
  const maxMoveY = isMobile ? 100 : 400;

  const safeX = Math.random() * Math.min(popupWidth - btnWidth - 20, maxMoveX);
  const safeY = Math.random() * Math.min(popupHeight - btnHeight - 20, maxMoveY);

  yesBtn.style.position = "absolute";
  yesBtn.style.left = `${safeX}px`;
  yesBtn.style.top = `${safeY}px`;

  updateButtonText();
}

function updateButtonText() {
  yesBtn.textContent = getRandomPhrase(phrasesYes);
  noBtn.textContent = getRandomPhrase(phrasesNo);
}

function getRandomPhrase(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

// Click d·∫•u ?
questionMark.addEventListener("click", () => {
  minigame.classList.remove("hidden");
  renderMinigameNumbers();
});

function renderMinigameNumbers() {
  const numbers = new Set();
  numbers.add(targetNumber);
  while (numbers.size < 30) {
    numbers.add(Math.floor(Math.random() * 999) + 1);
  }

  const nums = Array.from(numbers).sort(() => Math.random() - 0.5);
  numberGrid.innerHTML = "";
  resultText.textContent = "";

  nums.forEach(num => {
    const btn = document.createElement("button");
    btn.textContent = num;
    btn.onclick = () => {
      if (num === targetNumber) {
        handleCorrect();
      } else {
        handleWrong();
      }
    };
    numberGrid.appendChild(btn);
  });
}

function handleCorrect() {
  resultText.textContent = "üéâ B·∫°n ƒë√£ ch·ªçn ƒë√∫ng s·ªë 143!";
  resultText.style.color = "green";

  yesBtn.textContent = "yessss";
  noBtn.textContent = "yessss";
  yesBtn.style.position = "static";
  noBtn.style.position = "static";
  gameSolved = true;

  // ·∫®n d·∫•u ? sau khi win
  questionMark.classList.add("hidden");
  showQuestionMark = false;

  [yesBtn, noBtn].forEach(btn => {
    btn.onclick = () => {
      popup.classList.add("hidden");
      minigame.classList.add("hidden");
      showBirthdayMessage();
      showFlowerEffect(); // Th√™m hoa r∆°i
    };
  });

  closeMinigame.classList.remove("hidden");

  // T·∫Øt minigame sau 5 gi√¢y
  setTimeout(() => {
    minigame.classList.add("hidden");
  }, 5000);
}

function handleWrong() {
  resultText.textContent = "Sai r√πi üò¢";
  resultText.style.color = "red";
  minigame.classList.add("hidden");

  wrongAttempts++;

  // Lu√¥n ·∫©n d·∫•u ? n·∫øu ch·ªçn sai
  questionMark.classList.add("hidden");
  showQuestionMark = false;       // ‚úÖ Reset flag
  yesBtnMoves = 0;                // ‚úÖ Reset ƒë·∫øm di chuy·ªÉn

  setTimeout(() => {
    popup.classList.add("hidden");
    yesBtn.style.position = "static";
    updateButtonText();
  }, 1000);
}

// ƒê√≥ng/m·ªü minigame
closeMinigame.addEventListener("click", () => {
  const isHidden = minigame.classList.contains("hidden");

  if (isHidden) {
    minigame.classList.remove("hidden");
    renderMinigameNumbers();
  } else {
    minigame.classList.add("hidden");
  }
});

// L·ªùi ch√∫c sinh nh·∫≠t
function showBirthdayMessage() {
  const msg = document.createElement("div");
  msg.textContent = "Ch√∫c m·ª´ng sinh nh·∫≠t b nhaaaa, ch√∫c b·∫°n tu·ªïi m·ªõi ƒë·∫°t ƒë∆∞·ª£c nhi·ªÅu th√†nh c√¥ng trong cu·ªôc s·ªëng n√†y v√† nƒÉm nay l√† b ƒë√£ 18 tu·ªïi r ƒë·∫•y, c√≥ th·ªÉ l√†m nh·ªØng ƒëi·ªÅu m√¨nh th√≠ch m√† kh√¥ng ph·∫£i lo g√¨ h·∫øt n√®. NƒÉm nay ph·∫£i c·ªë g·∫Øng ƒë·∫≠u NV1 nha b, r·ªìi t√¨m ƒë∆∞·ª£c eboy c·ªßa m√¨nh n·ªØa üéÇüéâ";

  msg.style.position = "fixed";
  msg.style.top = "50%";
  msg.style.left = "50%";
  msg.style.transform = "translate(-50%, -50%)";
  msg.style.background = "#fff0f5";
  msg.style.padding = "30px";
  msg.style.borderRadius = "20px";
  msg.style.fontSize = "1.4rem";
  msg.style.maxWidth = "80vw";
  msg.style.wordBreak = "break-word";
  msg.style.boxShadow = "0 0 20px rgba(0,0,0,0.2)";
  msg.style.zIndex = 999;
  msg.classList.add("floating-msg");

  document.body.appendChild(msg);
  giftBox.classList.add("hidden");

  // Gallery
  const gallery = document.createElement("div");
  gallery.className = "gallery";

  const images = [
    "images/photo1.webp",
    "images/photo2.webp",
    "images/photo3.webp"
  ];

  images.forEach(src => {
    const img = document.createElement("img");
    img.src = src;
    img.className = "gallery-thumb";
    img.onclick = () => openImageViewer(src);
    gallery.appendChild(img);
  });

  document.body.appendChild(gallery);
}

// Viewer m·ªü ·∫£nh
function openImageViewer(src) {
  const viewer = document.getElementById("imageViewer");
  const viewerImg = document.getElementById("viewerImg");
  const downloadBtn = document.getElementById("downloadBtn");

  viewer.classList.add("active");
  viewerImg.src = src;
  downloadBtn.href = src;
}

document.getElementById("closeViewer").onclick = () => {
  document.getElementById("imageViewer").classList.remove("active");
};

// Drag minigame (PC)
let isDragging = false;
let offsetX = 0, offsetY = 0;

minigameHeader.addEventListener("mousedown", (e) => {
  isDragging = true;
  offsetX = e.clientX - minigame.offsetLeft;
  offsetY = e.clientY - minigame.offsetTop;
});

document.addEventListener("mousemove", (e) => {
  if (isDragging) {
    minigame.style.left = `${e.clientX - offsetX}px`;
    minigame.style.top = `${e.clientY - offsetY}px`;
  }
});

document.addEventListener("mouseup", () => {
  isDragging = false;
});
